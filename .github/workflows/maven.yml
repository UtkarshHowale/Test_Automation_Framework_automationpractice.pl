name: Test Automation Workflow

on:
  schedule:
    - cron: '00 18 * * *'
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven

    - name: Running Automation Framework With Maven
      run: mvn test -Dbrowser=chrome -DisLambdaTest=false -DisHeadless=true -X

    - name: Upload Test Logs
      if: always()
      uses: actions/upload-artifact@v4.6.1
      with:
        name: Test Logs
        path: logs/

    - name: Upload Screenshots as Artifacts (Only if exists)
      if: always()
      run: |
        if [ -d "screenshots" ]; then
          echo "Uploading screenshots..."
          tar -czf screenshots.tar.gz screenshots
        else
          echo "No screenshots found."
        fi
      continue-on-error: true

    - name: Upload screenshots archive
      if: always()
      uses: actions/upload-artifact@v4.4.3
      with:
        name: screenshots
        path: screenshots.tar.gz

    - name: Upload Test HTML Report as Artifact
      if: always()
      uses: actions/upload-artifact@v4.6.1
      with:
        name: Test Report
        path: report.html

    - name: Test Execution Status
      run: echo "Test Execution Completed"

    - name: Convert UTC to IST and copy report
      if: always()
      run: |
        echo "Converting time to IST..."
        ist_time=$(TZ=Asia/Kolkata date +"%Y-%m-%d_%H-%M-%S")
        mkdir -p public/extent-reports
        cp report.html public/extent-reports/report_${ist_time}.html

        if [ -d "screenshots" ]; then
          cp -R screenshots/ public/extent-reports/screenshots/
        fi

        echo "Files in public/extent-reports:"
        ls -l public/extent-reports/

    - name: Deploy ðŸš€
      if: always()
      uses: JamesIves/github-pages-deploy-action@v4
      with:
        folder: public/extent-reports/
        token: ${{ secrets.SECRETKEY }}
        clean: true
